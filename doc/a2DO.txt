a2DO:
finish laying out paths

* a2 dir:
    a2_starter - compiled AHK, runs set Autohotkey.exe with a2.ahk
    a2.ahk - starts up a2 runtime with includes from a2_init
    a2_init.ahk - includes pointing to settings dir, empty by default
    a2_settings.ahk - basic a2 paths, empty by default
    a2ui.ahk - starts up a2 user interface with a2_python path from a2_settings

    * a2 ui dir:
        a2app.py - a2ui entry point
        a2ui.py - actual user interface, calls a2.ahk with set Autohotkey.exe

* a2_settings dir: (by default in a2 dir)
    a2db
    includes

* a2_module dir: (by default in a2 dir/modules)
    a2_module.json


road to release:
    * multi module sources implemented.
        . remote sources have index file
        . higher version nr invokes update
        . local sources (on disc) just import
    * tagging system implemented
        . source is a tag
        . active/inactive
        . file/windows/text/lookup/code/keys/control/mouse
    * some more modules ported
        . Comfort Resize
        . Hotstrings
        . LeoToolTip
        . CommandLine
        . PastePlain
    * reset module settings
    * reset single control settings

in flight:
* create hotkey control which writes hotkeys.ahk inlcude
    * borrow scope selection and hotkey getter from aA?
    * add multiple hotkey user functionality
    * check for hotkey conflicts before submit
    * allow multiple hotkeys in edit mode


#38:
* create dev config page
    * author name (get user name by default), script editor, github handle?, jsonIndent ...
    * homepage
    * autohotkey editor
    * autohotkey executable

* startup with no settings set
* write python executable path to a2.ahk
* make startup tooltip optional


a2DONE:
* config/welcome page
    * create a2 settings page (part of welcome already)
    * make a2 welcome view a mod with config too
    * option: remember last selected mod   
* create groups
    * we actually don't need changes on a2ui.settingsChanged
      all this will be embedded on mod level. So a2mod.change will browse the own settings and
      put data to the includes, variables and hokeys-entries if the group is activated. 
* create check control which writes inlcudes: variables.ahk/inlcude.ahk
* deselect mod and show a2 welcome on Esc? (optional)
* disable Edit mod when multiple selected
* add element > include uses available scipts list
* make windowsettings use db
* resolve settingsChanged bug a2 loads old includes before saving is finished
* EditCtrls: unify "element" and "data" to cfg
* added QComboBox to be handled by EditCtrl automatically
* hotkey stuff
    * finish adding scoped hotkeys
    * implement hotkey data in change loop
    * save as little user prefs as possible
        if nothing set: take it from cfg
        set ON if default OFF and vice versa ...
    * dynamic show/hide of function controls
    * dynamic show/hide of scope list
* no reload on submit when mod is disabled
* fix: show no or summary page when multiple selected
* create functionality to delete edit element 
    * editElement class from QWidget? Also to shift elements up/down in edit ui
* Ctrl+Enter to OK an edit change
* pack SQLiteSpy to lib
* make edit elements write to the tempConfig on keystroke!!!
* show summary title when multiple mods selected
* show a2 welcome when no mod selected
* create new script now works and puts mod name, script name, author name, creation date
* creating new config.json also makes use of getAuthor and getDate
* make Mod.files always browse for files freshly
* "edit script" on include elements
* explore to mod
* Qt keyboard shortcut code
